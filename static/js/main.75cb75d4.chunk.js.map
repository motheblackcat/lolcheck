{"version":3,"sources":["Containers/main-component/main-component.module.scss","Assets/Images/ranked-emblems/unranked.png","Components/selector-component/selector-component.module.scss","Components/loader-component/loader-component.module.scss","Assets/Images/ranked-emblems/iron.png","Assets/Images/ranked-emblems/bronze.png","Assets/Images/ranked-emblems/silver.png","Assets/Images/ranked-emblems/gold.png","Assets/Images/ranked-emblems/platinum.png","Assets/Images/ranked-emblems/diamond.png","Assets/Images/ranked-emblems/master.png","Assets/Images/ranked-emblems/grandmaster.png","Assets/Images/ranked-emblems/challenger.png","Components/league-component/league-component.module.scss","tempdevconf.ts","Interfaces/game-const.tsx","Store/actions.tsx","Components/selector-component/selector-component.tsx","Components/loader-component/loader-component.tsx","Components/league-component/league-component.tsx","Containers/main-component/main-component.tsx","App.tsx","serviceWorker.ts","Store/reducer.tsx","index.tsx"],"names":["module","exports","key","LEAGUE","setChampionDataAction","payload","type","getSummonerLeagueAction","sumInfo","dispatch","axios","get","sumRegion","sumId","then","res","leagueDTO","data","sumLeague","length","forEach","league","queueType","wins","losses","tier","rank","leaguePoints","push","getSummonerMasteryAction","getState","sumMastery","shift","sumMasteryChampId","championId","toString","champ","champions","find","champion","champName","name","replace","champSplash","sumSplash","sumChamp","successSumInfoAction","loadingSumInfoAction","errorSumInfoAction","SelectorComponent","state","sumName","e","target","this","setState","value","store","match","summoner","summonerDTO","sumLevel","summonerLevel","sumIcon","profileIconId","id","err","console","error","response","status","className","classes","selector","htmlFor","onChange","getSummonerNameHandler","onKeyDown","keyCode","props","isLoading","getSummonerInfoHandler","disabled","onClick","getSummonerRegionHandler","React","Component","connect","LoaderComponent","loader","LeagueComponent","logos","unrankedLogo","ironLogo","bronzeLogo","silverLogo","goldLogo","platinumLogo","diamondLogo","masterLogo","grandmasterLogo","challengerLogo","title","src","toLowerCase","alt","MainComponent","sumSplashStyle","backgroundImage","soloRank","flexRank","isError","message","main","banner","style","content","App","championData","Object","values","Boolean","window","location","hostname","initalState","rootReducer","action","createStore","composeWithDevTools","applyMiddleware","next","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.75cb75d4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"main-component_main__3WasA\",\"banner\":\"main-component_banner__1A4bB\",\"content\":\"main-component_content__3mIBk\",\"error\":\"main-component_error__2zJqf\"};","module.exports = __webpack_public_path__ + \"static/media/unranked.eec1564a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selector\":\"selector-component_selector__MQbBU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"loader-component_loader__2dBr4\",\"rotate\":\"loader-component_rotate__9t7So\"};","module.exports = __webpack_public_path__ + \"static/media/iron.1a6b4669.png\";","module.exports = __webpack_public_path__ + \"static/media/bronze.39964f7f.png\";","module.exports = __webpack_public_path__ + \"static/media/silver.3a4aa1a5.png\";","module.exports = __webpack_public_path__ + \"static/media/gold.19be519b.png\";","module.exports = __webpack_public_path__ + \"static/media/platinum.86ac5170.png\";","module.exports = __webpack_public_path__ + \"static/media/diamond.c9018327.png\";","module.exports = __webpack_public_path__ + \"static/media/master.4156f1c1.png\";","module.exports = __webpack_public_path__ + \"static/media/grandmaster.d0d4b62f.png\";","module.exports = __webpack_public_path__ + \"static/media/challenger.4aaf9754.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"league\":\"league-component_league__3-SI6\"};","export const key = 'RGAPI-daf80488-49fe-430a-9703-b410736c938d';\r\n","export const LEAGUE = {\r\n  RANKED_FLEX_TT: 'RANKED_FLEX_TT',\r\n  RANKED_SOLO_5x5: 'RANKED_SOLO_5x5',\r\n  RANKED_FLEX_SR: 'RANKED_FLEX_SR'\r\n};\r\n","import { Dispatch } from 'redux';\r\nimport axios, { AxiosResponse, AxiosError } from 'axios';\r\n\r\nimport { key } from '../tempdevconf';\r\nimport { Summoner, SummonerDTO, LeagueEntryDTO, League, Champion, ChampionMasteryDTO } from '../Interfaces/summoner-interface';\r\nimport { LEAGUE } from '../Interfaces/game-const';\r\n\r\nexport const GET_SUM_NAME = 'GET_SUM_NAME';\r\nexport const GET_SUM_REGION = 'GET_SUM_REGION';\r\nexport const GET_SUM_INFO = 'GET_SUM_INFO';\r\nexport const LOADING_SUM_INFO = 'LOADING_SUM_INFO';\r\nexport const SUCCESS_SUM_INFO = 'SUCCESS_SUM_INFO';\r\nexport const ERROR_SUM_INFO = 'ERROR_SUM_INFO';\r\nexport const SET_CHAMPION_DATA = 'SET_CHAMPION_DATA';\r\n\r\nexport const getSumNameAction = (payload: string) => {\r\n  return {\r\n    type: GET_SUM_NAME,\r\n    payload\r\n  };\r\n};\r\n\r\nexport const getSumRegionAction = (payload: string) => {\r\n  return {\r\n    type: GET_SUM_REGION,\r\n    payload\r\n  };\r\n};\r\n\r\n// TODO: Get the ddragon version and language dynamicaly\r\nexport const getChampionDataAction = () => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    axios.get('https://ddragon.leagueoflegends.com/cdn/9.24.2/data/en_US/champion.json').then((res: AxiosResponse) => {\r\n      const championData: Array<Object> = Object.values(res.data.data);\r\n      dispatch(setChampionDataAction(championData));\r\n    });\r\n  };\r\n};\r\n\r\nexport const setChampionDataAction = (payload: any) => {\r\n  return {\r\n    type: SET_CHAMPION_DATA,\r\n    payload\r\n  };\r\n};\r\n\r\n// Action used to trigger the Riot API call chain (summoner info > league info > fav champion)\r\nexport const getSumInfoAction = () => {\r\n  return (dispatch: Dispatch<any>, getState: Function) => {\r\n    dispatch(loadingSumInfoAction());\r\n    const sumName: string = getState().summoner.sumName;\r\n    const sumRegion: string = getState().summoner.sumRegion;\r\n    const sumLeague: Array<League> = getState().summoner.sumLeague;\r\n\r\n    axios.get(`https://${sumRegion}.api.riotgames.com/lol/summoner/v4/summoners/by-name/${sumName}?api_key=${key}`).then(\r\n      (res: AxiosResponse) => {\r\n        const summonerDTO: SummonerDTO = res.data;\r\n        const sumInfo: Summoner = {\r\n          sumName: summonerDTO.name,\r\n          sumLevel: summonerDTO.summonerLevel,\r\n          sumIcon: `https://ddragon.leagueoflegends.com/cdn/9.24.2/img/profileicon/${res.data.profileIconId}.png`,\r\n          sumId: summonerDTO.id,\r\n          sumRegion: sumRegion,\r\n          sumSplash: '',\r\n          sumChamp: '',\r\n          sumLeague: sumLeague\r\n        };\r\n        dispatch(getSummonerLeagueAction(sumInfo));\r\n      },\r\n      (err: AxiosError) => {\r\n        console.error('[API Call] Error on get Summoner api call:', err.response?.status);\r\n\r\n        switch (err.response?.status) {\r\n          case 404:\r\n            return dispatch(errorSumInfoAction('Summoner not found.'));\r\n          default:\r\n            return dispatch(errorSumInfoAction('Unknown error.'));\r\n        }\r\n      }\r\n    );\r\n  };\r\n};\r\n\r\n// Action used to get summoner rank info\r\nexport const getSummonerLeagueAction = (sumInfo: Summoner) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    axios\r\n      .get(`https://${sumInfo.sumRegion}.api.riotgames.com/lol/league/v4/entries/by-summoner/${sumInfo.sumId}?api_key=${key}`)\r\n      .then((res: AxiosResponse) => {\r\n        const leagueDTO: Array<LeagueEntryDTO> = res.data;\r\n        sumInfo.sumLeague = [];\r\n        if (leagueDTO.length > 0) {\r\n          leagueDTO.forEach(league => {\r\n            if (league.queueType !== LEAGUE.RANKED_FLEX_TT) {\r\n              const sumLeague: League = {\r\n                queueType: league.queueType,\r\n                wins: league.wins,\r\n                losses: league.losses,\r\n                tier: league.tier,\r\n                rank: league.rank,\r\n                leaguePoints: league.leaguePoints\r\n              };\r\n              sumInfo.sumLeague.push(sumLeague);\r\n            }\r\n          });\r\n        }\r\n        dispatch(getSummonerMasteryAction(sumInfo));\r\n      });\r\n  };\r\n};\r\n\r\n// Action used to get summoner masteries & best champion splash\r\nexport const getSummonerMasteryAction = (sumInfo: Summoner) => {\r\n  return (dispatch: Dispatch<any>, getState: Function) => {\r\n    axios\r\n      .get(\r\n        `https://${sumInfo.sumRegion}.api.riotgames.com/lol/champion-mastery/v4/champion-masteries/by-summoner/${sumInfo.sumId}?api_key=${key}`\r\n      )\r\n      .then((res: AxiosResponse) => {\r\n        const sumMastery: ChampionMasteryDTO = res.data.shift();\r\n        if (sumMastery) {\r\n          const sumMasteryChampId: string = sumMastery.championId.toString();\r\n          const champ: Champion = getState().champions.find((champion: Champion) => champion.key === sumMasteryChampId);\r\n          const champName: string = champ.name.replace(/[^a-zA-Z]/g, '');\r\n          const champSplash: string = `https://ddragon.leagueoflegends.com/cdn/img/champion/splash/${champName}_0.jpg`;\r\n          sumInfo.sumSplash = champSplash;\r\n          sumInfo.sumChamp = champ.name;\r\n          dispatch(successSumInfoAction(sumInfo));\r\n        } else {\r\n          dispatch(successSumInfoAction(sumInfo));\r\n        }\r\n      });\r\n  };\r\n};\r\n\r\n// Action used for the loader\r\nexport const loadingSumInfoAction = () => {\r\n  return {\r\n    type: LOADING_SUM_INFO\r\n  };\r\n};\r\n\r\n// Action used to handle success / error from getting Summoner info & mastery\r\nexport const successSumInfoAction = (payload: any) => {\r\n  return {\r\n    type: SUCCESS_SUM_INFO,\r\n    payload\r\n  };\r\n};\r\n\r\nexport const errorSumInfoAction = (payload: any) => {\r\n  return {\r\n    type: ERROR_SUM_INFO,\r\n    payload\r\n  };\r\n};\r\n","import React, { ChangeEvent } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { store } from '../..';\r\nimport { getSumNameAction, getSumRegionAction, getSumInfoAction } from '../../Store/actions';\r\nimport { IState } from '../../Interfaces/summoner-interface';\r\n\r\nimport classes from './selector-component.module.scss';\r\n\r\ninterface State {\r\n  isLoading: boolean;\r\n}\r\n\r\nclass SelectorComponent extends React.Component<State> {\r\n  state = {\r\n    sumName: ''\r\n  };\r\n\r\n  getSummonerNameHandler(e: ChangeEvent): void {\r\n    const target: HTMLInputElement = e.target as HTMLInputElement;\r\n    this.setState({ sumName: target.value });\r\n  }\r\n\r\n  getSummonerRegionHandler(e: ChangeEvent): void {\r\n    const target: HTMLInputElement = e.target as HTMLInputElement;\r\n    store.dispatch(getSumRegionAction(target.value));\r\n  }\r\n\r\n  getSummonerInfoHandler(): void {\r\n    if (this.state.sumName.match(/\\S+/)) {\r\n      store.dispatch(getSumNameAction(this.state.sumName));\r\n      store.dispatch(getSumInfoAction());\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.selector}>\r\n        <label htmlFor=\"sumname\">Summoner Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"sumname\"\r\n          id=\"sumname\"\r\n          onChange={e => this.getSummonerNameHandler(e)}\r\n          onKeyDown={e => (e.keyCode === 13 && !this.props.isLoading ? this.getSummonerInfoHandler() : null)}\r\n        />\r\n\r\n        <button disabled={this.props.isLoading} onClick={() => this.getSummonerInfoHandler()}>\r\n          {this.props.isLoading ? 'Loading...' : 'Check'}\r\n        </button>\r\n\r\n        <label htmlFor=\"sumregion\">Server:</label>\r\n        <select name=\"sumregion\" id=\"sumregion\" onChange={e => this.getSummonerRegionHandler(e)}>\r\n          <option value=\"euw1\">EUW</option>\r\n          <option value=\"na1\">NA</option>\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n  return {\r\n    isLoading: state.isLoading\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SelectorComponent);\r\n","import * as React from 'react';\r\nimport classes from './loader-component.module.scss';\r\n\r\nexport const LoaderComponent: React.FC = () => {\r\n  return (\r\n    <div className={classes.loader}>\r\n      <div>\r\n        <div>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { League } from '../../Interfaces/summoner-interface';\r\n\r\nimport unrankedLogo from '../../Assets/Images/ranked-emblems/unranked.png';\r\nimport ironLogo from '../../Assets/Images/ranked-emblems/iron.png';\r\nimport bronzeLogo from '../../Assets/Images/ranked-emblems/bronze.png';\r\nimport silverLogo from '../../Assets/Images/ranked-emblems/silver.png';\r\nimport goldLogo from '../../Assets/Images/ranked-emblems/gold.png';\r\nimport platinumLogo from '../../Assets/Images/ranked-emblems/platinum.png';\r\nimport diamondLogo from '../../Assets/Images/ranked-emblems/diamond.png';\r\nimport masterLogo from '../../Assets/Images/ranked-emblems/master.png';\r\nimport grandmasterLogo from '../../Assets/Images/ranked-emblems/grandmaster.png';\r\nimport challengerLogo from '../../Assets/Images/ranked-emblems/challenger.png';\r\nimport classes from './league-component.module.scss';\r\n\r\ntype LeagueProps = {\r\n  league: League | undefined;\r\n  title: string;\r\n};\r\n\r\nexport const LeagueComponent: React.FC<LeagueProps> = (props: LeagueProps) => {\r\n  const logos: any = {\r\n    unrankedLogo,\r\n    ironLogo,\r\n    bronzeLogo,\r\n    silverLogo,\r\n    goldLogo,\r\n    platinumLogo,\r\n    diamondLogo,\r\n    masterLogo,\r\n    grandmasterLogo,\r\n    challengerLogo\r\n  };\r\n\r\n  return (\r\n    <div className={classes.league}>\r\n      <span>{props.title}</span>\r\n      <img src={props.league ? logos[props.league.tier.toLowerCase() + 'Logo'] : unrankedLogo} alt=\"league emblem\" />\r\n      <span>{props.league ? `${props.league.tier} ${props.league.rank}` : 'Unranked'}</span>\r\n      {props.league ? (\r\n        <span>\r\n          {props.league.leaguePoints} LP {props.league.wins}W / {props.league.losses}L\r\n        </span>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { LoaderComponent } from '../../Components/loader-component/loader-component';\r\nimport { LeagueComponent } from '../../Components/league-component/league-component';\r\n\r\nimport { IState, League, Error } from '../../Interfaces/summoner-interface';\r\nimport { LEAGUE } from '../../Interfaces/game-const';\r\nimport classes from './main-component.module.scss';\r\n\r\ninterface State {\r\n  sumName: string;\r\n  sumIcon: string;\r\n  sumLevel: number;\r\n  sumRegion: string;\r\n  sumSplash: string;\r\n  sumLeague: Array<League>;\r\n  sumChamp: string;\r\n  isLoading: boolean;\r\n  error: Error;\r\n}\r\n\r\nclass MainComponent extends React.Component<State> {\r\n  // TODO: Use translation file\r\n  render() {\r\n    const sumSplashStyle = { backgroundImage: `url('${this.props.sumSplash}')` };\r\n    const soloRank = this.props.sumLeague.find((league: League) => league.queueType === LEAGUE.RANKED_SOLO_5x5);\r\n    const flexRank = this.props.sumLeague.find((league: League) => league.queueType === LEAGUE.RANKED_FLEX_SR);\r\n\r\n    if (this.props.isLoading) return <LoaderComponent />;\r\n    if (this.props.error.isError) return <div className={classes.error}>{this.props.error.message}</div>;\r\n    if (this.props.sumName) {\r\n      return (\r\n        <div className={classes.main}>\r\n          <div className={classes.banner} style={sumSplashStyle}>\r\n            <img src={this.props.sumIcon} alt=\"summoner icon\" />\r\n            <div>\r\n              <div>\r\n                {this.props.sumName} - Level {this.props.sumLevel}\r\n              </div>\r\n              {this.props.sumChamp ? <div>{this.props.sumChamp}</div> : null}\r\n            </div>\r\n          </div>\r\n          <div className={classes.content}>\r\n            <LeagueComponent title=\"Solo/Duo Rank\" league={soloRank} />\r\n            <LeagueComponent title=\"Flex Rank\" league={flexRank} />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else return null;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n  return {\r\n    sumName: state.summoner.sumName,\r\n    sumIcon: state.summoner.sumIcon,\r\n    sumLevel: state.summoner.sumLevel,\r\n    sumRegion: state.summoner.sumRegion,\r\n    sumSplash: state.summoner.sumSplash,\r\n    sumChamp: state.summoner.sumChamp,\r\n    sumLeague: state.summoner.sumLeague,\r\n    isLoading: state.isLoading,\r\n    error: state.error\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(MainComponent);\r\n","import React from 'react';\r\nimport { store } from '.';\r\nimport { getChampionDataAction } from './Store/actions';\r\n\r\nimport SelectorComponent from './Components/selector-component/selector-component';\r\nimport MainComponent from './Containers/main-component/main-component';\r\n\r\nimport './App.scss';\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    store.dispatch(getChampionDataAction());\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>LoL Check</h1>\r\n        <SelectorComponent />\r\n        <MainComponent />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as summonerActions from './actions';\r\nimport { IState } from '../Interfaces/summoner-interface';\r\n\r\nconst initalState: IState = {\r\n  summoner: {\r\n    sumName: '',\r\n    sumIcon: '',\r\n    sumLevel: 0,\r\n    sumRegion: 'euw1',\r\n    sumId: '',\r\n    sumSplash: '',\r\n    sumLeague: [],\r\n    sumChamp: ''\r\n  },\r\n  champions: [],\r\n  isLoading: false,\r\n  error: {\r\n    isError: false,\r\n    message: ''\r\n  }\r\n};\r\n\r\nconst rootReducer = (state: IState = initalState, action: any) => {\r\n  switch (action.type) {\r\n    case summonerActions.GET_SUM_NAME:\r\n      return { ...state, summoner: { ...state.summoner, sumName: action.payload } };\r\n\r\n    case summonerActions.GET_SUM_REGION:\r\n      return { ...state, summoner: { ...state.summoner, sumRegion: action.payload } };\r\n\r\n    case summonerActions.LOADING_SUM_INFO:\r\n      return { ...state, isLoading: true };\r\n\r\n    case summonerActions.SUCCESS_SUM_INFO:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: { ...state.error, isError: false, message: '' },\r\n        summoner: {\r\n          ...state.summoner,\r\n          sumName: action.payload.sumName,\r\n          sumLevel: action.payload.sumLevel,\r\n          sumIcon: action.payload.sumIcon,\r\n          sumId: action.payload.sumId,\r\n          sumSplash: action.payload.sumSplash,\r\n          sumChamp: action.payload.sumChamp,\r\n          sumLeague: action.payload.sumLeague\r\n        }\r\n      };\r\n\r\n    case summonerActions.ERROR_SUM_INFO:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: { ...state.error, isError: true, message: action.payload }\r\n      };\r\n\r\n    case summonerActions.SET_CHAMPION_DATA:\r\n      return { ...state, champions: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore, Action, applyMiddleware, Middleware, MiddlewareAPI } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { Provider } from 'react-redux';\nimport rootReducer from './Store/reducer';\n\nconst logger: Middleware = (store: MiddlewareAPI) => {\n  return (next: Function) => {\n    return (action: Action) => {\n      // console.log('[Middleware] dispatching', action);\n      const result = next(action);\n      // console.log('[Middleware] next state', store.getState());\n      return result;\n    };\n  };\n};\n\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(logger, thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}